#include<iostream>
#include<set>
#include<map>
#include<unordered_map>
#include<unordered_set>
#include<array>
#include<string>
#include<fstream>
#include<sstream>
#include<cstring>
#include<algorithm>
#include<climits>
#include<cmath>
#include<numeric>
#include<vector>
#include<stack>
#include<cstddef>
#include<utility>
#include<queue>
#include<deque>
#include<iomanip>
#include<random>
#include<cstdbool>
using namespace std;

#define ll long long
#define ull unsigned long long
#define l long
#define fl float
#define fi first
#define se second
#define pb push_back
#define PB pop_back()
#define pf push_front
#define PF pop_front()
#define era erase
#define ins insert
#define xd cout<<endl;
#define FOR(i,r,n) for(int i=r ; i<n; ++i)
#define FORn(i,r,n) for(int i=r ; i<=n; ++i)
#define FORen(i,r,n) for(int i=n-1; i>=r; --i)

inline ll gcd(ll a, ll b) { if (b == 0) return a; else return gcd(b, a % b); }
inline ll lcm(ll a, ll b) { return b / gcd(a, b) * a; }
inline ll max(ll a, ll b) { ll max; return max = a > b ? a : b; }
inline ll min(ll a, ll b) { ll min; return min = a < b ? a : b; }

const ll mod = 1000000007;
const ll inf = 1000002804;
const int dx1[8] = { -1,-1,-1,0,0,1,1,1 };
const int dy1[8] = { -1,0,1,-1,1,-1,0,1 };
const int dx2[4] = { -1,0,1,0 };
const int dy2[4] = { 0,-1,0,1 };

vector<pair<int, int>> edge;
int V, E, U, s, t;
vector<int> v[1001], topo;
char a[1001][1001];
bool visited[1001], Visited[1001][1001];
int parent[1001], A[505][505];
int d[1001][1001], degree[1001], color[1001];
int st, en;
//sap xep topo
//Kahn

bool kahn() {
	int cnt = 0;
	queue<int> q;
	FORn(i, 1, V) {
		if (degree[i] == 0) q.push(i);
	}
	while (!q.empty()) {
		int top = q.front();
		q.pop();
		++cnt;
		for (int x : v[top]) {
			--degree[x];
			if (degree[x] == 0) {
				q.push(x);
			}
		}
	}
	if (cnt == V) return false;
	else return true;
}

void solve() {
	cin >> V >> E;
	FORn(i, 1, E) {
		int x, y;
		cin >> x >> y;
		v[x].pb(y);
		++degree[y];
	}
	if (kahn()) {
		cout << "YES\n";
		return;
	}
	else cout << "NO\n";
}


int main() {
	//int tc; cin >> tc;
	//while (tc--) {
		solve();
	//	xd
	//}
}
