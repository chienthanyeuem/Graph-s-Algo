#include<iostream>
#include<set>
#include<map>
#include<unordered_map>
#include<unordered_set>
#include<array>
#include<string>
#include<fstream>
#include<sstream>
#include<cstring>
#include<algorithm>
#include<climits>
#include<cmath>
#include<numeric>
#include<vector>
#include<stack>
#include<cstddef>
#include<utility>
#include<queue>
#include<deque>
#include<iomanip>
#include<random>
#include<cstdbool>
using namespace std;

#define str string
#define ll long long
#define ull unsigned long long
#define l long
#define fl float
#define fi first
#define se second
#define pb push_back
#define PB pop_back()
#define pf push_front
#define PF pop_front()
#define era erase
#define ins insert
#define FOR(i,r,n) for(int i=r ; i<n; ++i)
#define FORn(i,r,n) for(int i=r ; i<=n; ++i)
#define FORen(i,r,n) for(int i=n-1; i>=r; --i)

inline ll gcd(ll a, ll b) { if (b == 0) return a; else return gcd(b, a % b); }
inline ll lcm(ll a, ll b) { return b / gcd(a, b) * a; }
inline ll max(ll a, ll b) { ll max; return max = a > b ? a : b; }
inline ll min(ll a, ll b) { ll min; return min = a < b ? a : b; }

const ll mod = 1000000007;
const ll inf = 1000002804;
const int dx1[8] = { -1,-1,-1,0,0,1,1,1 };
const int dy1[8] = { -1,0,1,-1,1,-1,0,1 };
const int dx2[4] = { -1,0,1,0 };
const int dy2[4] = { 0,-1,0,1 };
const int maxn = 10001;

int V, E;

vector<pair<int, int>> canh[maxn];
int d[maxn], parent[maxn];
bool used[maxn];

struct edge {
	int u, v, w;
	edge(int& a, int& b, int& c) {
		u = a, v = b, w = c;
	}
};

//1 <-> 3 : 2
//1 <-> 5 : 1
//5 <-> 3 : 4


void PRIM(int u) {
	// Khoi tao hang doi uu tien de dua canh co trong so nho nhat len dau hang doi
	priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> Q;
	int total = 0;
	Q.push({ 0,u });
	vector<edge> MST;
	while (!Q.empty()) {
		pair<int,int> top = Q.top();
		Q.pop();
		int dinh = top.second, trongso = top.first;
		if (used[dinh]) continue;
		total += trongso;
		if (u != dinh) {
			MST.pb({ parent[dinh], dinh, trongso });
		}
		used[dinh] = true;
		for (pair<int, int> it : canh[dinh]) {
			if (!used[it.first] and it.second < d[it.first]) {
				Q.push({ it.second, it.first });
				parent[it.first] = dinh;
				d[it.first] = it.second;
			}
		}
	}
	cout << "MST : " << total << endl;
	for (edge it : MST) {
		cout << it.u << " " << it.v << " " << it.w << endl;
	}
}

int main() {
	cin >> V >> E;
	FOR(i, 0, E) {
		int x, y, z; cin >> x >> y >> z;
		canh[x].pb({ y,z });
		canh[y].pb({ x,z });
	}
	memset(used, false, sizeof(used));
	FOR(i, 1, V + 1) {
		d[i] = INT_MAX;
	}
	int t; cin >> t;
	PRIM(t);
}
